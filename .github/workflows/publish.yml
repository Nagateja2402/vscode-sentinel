name: Publish release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build:
    name: Package
    runs-on: "ubuntu-latest"
    steps:
      - name: Check out repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      - name: Read extension version
        id: ext-version
        run: |
          content=`cat ./package.json | jq -r .version`
          echo "::set-output name=content::$content"
      - name: Ensure version matches with tag
        if: ${{ github.ref != format('refs/tags/v{0}', steps.ext-version.outputs.content) }}
        run: |
          echo "Version mismatch!"
          echo "Received ref: ${{ github.ref }}"
          echo "Expected ref: refs/tags/v${{ steps.ext-version.outputs.content }}"
          exit 1
      - uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - run: npm run package
      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          path: "*.vsix"

  publish:
    name: Publish All
    runs-on: ubuntu-latest
    needs: build
    if: success() && startsWith( github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      - run: npx vsce publish --no-git-tag-version --packagePath $(find . -iname *.vsix)
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
